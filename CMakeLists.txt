cmake_minimum_required(VERSION 2.6 FATAL_ERROR)
project(util)

if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    message(STATUS "Using clang complier")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Weverything")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-c++98-compat")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-c++98-compat-pedantic")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-padded")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-weak-vtables")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-global-constructors")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-exit-time-destructors")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wmissing-variable-declarations")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pedantic")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ferror-limit=2")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
    message(STATUS "Cxx flags ${CMAKE_CXX_FLAGS}")
endif()

if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    message(STATUS "Using g++ complier")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pedantic")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
    message(STATUS "Cxx flags ${CMAKE_CXX_FLAGS}")
endif()

find_package(Glog)
if(NOT GLOG_FOUND)
    message(STATUS "glog not found")
endif()

find_package(gflags)

find_package(GTest)
if(NOT GTEST_FOUND)
    message(STATUS "gtest not found")
endif()

find_package(X11)
if(NOT X11_FOUND)
    message(STATUS "x11 not found")
endif()

include_directories(${GLOG_INCLUDE_DIRS} ${GTEST_INCLUDE_DIRS} ${X11_INCLUDE_DIR} "./")

add_library(tensor tensor/shape.cc tensor/accesser.cc tensor/helpers.cc)
add_library(util util/archive_in.cc util/archive_out.cc util/rng.cc)

# integration
add_executable(quadrature_test integration/test/quadrature_test.cc)
target_link_libraries(quadrature_test ${GLOG_LIBRARIES})
target_link_libraries(quadrature_test ${GTEST_LIBRARIES})
target_link_libraries(quadrature_test ${GTEST_MAIN_LIBRARIES})

# tensor
add_executable(shape_test tensor/test/shape_test.cc)
target_link_libraries(shape_test tensor)
target_link_libraries(shape_test util)
target_link_libraries(shape_test ${GLOG_LIBRARIES})
target_link_libraries(shape_test ${GTEST_LIBRARIES})
target_link_libraries(shape_test ${GTEST_MAIN_LIBRARIES})

add_executable(accesser_test tensor/test/accesser_test.cc)
target_link_libraries(accesser_test tensor)
target_link_libraries(accesser_test util)
target_link_libraries(accesser_test ${GLOG_LIBRARIES})
target_link_libraries(accesser_test ${GTEST_LIBRARIES})
target_link_libraries(accesser_test ${GTEST_MAIN_LIBRARIES})

add_executable(helpers_test tensor/test/helpers_test.cc)
target_link_libraries(helpers_test tensor)
target_link_libraries(helpers_test util)
target_link_libraries(helpers_test ${GLOG_LIBRARIES})
target_link_libraries(helpers_test ${GTEST_LIBRARIES})
target_link_libraries(helpers_test ${GTEST_MAIN_LIBRARIES})

add_executable(tensor_test tensor/test/tensor_test.cc)
target_link_libraries(tensor_test tensor)
target_link_libraries(tensor_test util)
target_link_libraries(tensor_test ${GLOG_LIBRARIES})
target_link_libraries(tensor_test ${GTEST_LIBRARIES})
target_link_libraries(tensor_test ${GTEST_MAIN_LIBRARIES})

add_executable(sparse_tensor_test tensor/test/sparse_tensor_test.cc)
target_link_libraries(sparse_tensor_test tensor)
target_link_libraries(sparse_tensor_test util)
target_link_libraries(sparse_tensor_test ${GLOG_LIBRARIES})
target_link_libraries(sparse_tensor_test ${GTEST_LIBRARIES})
target_link_libraries(sparse_tensor_test ${GTEST_MAIN_LIBRARIES})

# differentiation
add_executable(ad_test automatic_differentiation/test/ad_test.cc)
target_link_libraries(ad_test ${GLOG_LIBRARIES})
target_link_libraries(ad_test ${GTEST_LIBRARIES})
target_link_libraries(ad_test ${gflags_LIBRARIES})

add_executable(ad_tensor_test automatic_differentiation/test/ad_tensor_test.cc)
target_link_libraries(ad_tensor_test util)
target_link_libraries(ad_tensor_test tensor)
target_link_libraries(ad_tensor_test ${GLOG_LIBRARIES})
target_link_libraries(ad_tensor_test ${GTEST_LIBRARIES})
target_link_libraries(sparse_tensor_test ${GTEST_MAIN_LIBRARIES})

add_executable(mnist_read_raw examples/data/mnist/mnist_read_raw.cc)
target_link_libraries(mnist_read_raw util)
target_link_libraries(mnist_read_raw tensor)
target_link_libraries(mnist_read_raw ${GLOG_LIBRARIES})
target_link_libraries(mnist_read_raw ${GTEST_LIBRARIES})

add_executable(nade_mnist examples/nade_mnist.cc)
target_link_libraries(nade_mnist util)
target_link_libraries(nade_mnist tensor)
target_link_libraries(nade_mnist ${gflags_LIBRARIES})
target_link_libraries(nade_mnist ${GLOG_LIBRARIES})
target_link_libraries(nade_mnist ${GTEST_LIBRARIES})

enable_testing()
add_test(shape shape_test)
add_test(accesser accesser_test)
add_test(helpers helpers_test)
add_test(tensor tensor_test)
add_test(sparse_tensor sparse_tensor_test)
add_test(quadrature quadrature_test)
add_test(ad ad_test)
add_test(ad_tensor ad_tensor_test)
